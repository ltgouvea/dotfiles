#!/usr/bin/env python
# -*- coding: utf-8 -*-

set $mod Mod4
set $term termite
set_from_resource $fg i3wm.color7 #f0f0f0
set_from_resource $bg i3wm.color2 #f0f0f0

# class                 border  backgr. text indicator child_border
client.focused          $bg     $bg     $fg  $bg       $bg
client.focused_inactive $bg     $bg     $fg  $bg       $bg
client.unfocused        $bg     $bg     $fg  $bg       $bg
client.urgent           $bg     $bg     $fg  $bg       $bg
client.placeholder      $bg     $bg     $fg  $bg       $bg

client.background       $bg

font pango:'Inconsolata for Powerline' 10
for_window [class="^.*"] border pixel 0
new_window 1pixel

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec $term 
bindsym $mod+x exec rxvt-unicode

# kill focused window
bindsym $mod+q kill

bindsym $mod+d exec rofi -show run -opacity "75"
bindsym $mod+t exec tilda
# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# Custom Launchers k2
bindsym $mod+Shift+f exec firefox
bindsym $mod+Shift+p exec pgadmin3
bindsym $mod+Shift+t exec qbittorrent

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+g split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+Shift+w layout stacked
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+Shift+a focus child

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i4 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
bindsym $mod+Shift+backspace reboot
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+o exit
bindsym $mod+z mode "resize"
bindsym $mod+shift+s mode "system"
bindsym $mod+Shift+m mode "music"
bindsym $mod+Shift+b mode "brightness"
bindsym $mod+Shift+g mode "$mode_gaps"

set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)

popup_during_fullscreen smart

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym Tab mode "$mode_gaps_outer"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym Tab mode "$mode_gaps_inner"
}

bindsym $mod+m exec $term -e mutt

mode "system" {
        bindsym s exec systemctl poweroff
        bindsym r exec systemctl reboot
        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Space  mode "default"
        bindsym Escape mode "default"
}

mode "music" {
        # todo: bind media keys
        bindsym k exec amixer -D pulse sset Master 5%+
        bindsym Shift+k exec amixer -D pulse sset Master 15%+
        bindsym Shift+j exec amixer -D pulse sset Master 15%-
        bindsym j exec amixer -D pulse sset Master 5%-
        
        bindsym l exec cmus-remote -n
        bindsym h exec cmus-remote -r
        bindsym x exec cmus-remote -u
        bindsym c exec cmus-remote -s
        bindsym g exec cmus-remote -p
        bindsym q exec cmus-remote -S
        bindsym s exec cmus-remote -S
        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Space  mode "default"
        bindsym Escape mode "default"
}

mode "brightness" {
        bindsym k exec light -A 5
        bindsym j exec light -U 5
        bindsym Return mode "default"
        bindsym Space  mode "default"
        bindsym Escape mode "default"
}

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Space  mode "default"
        bindsym Escape mode "default"
}

set $term termite

bindsym $mod+r exec $term -e ranger
bindsym $mod+n exec dolphin
bindsym $mod+Shift+Return exec $term -e tmux
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev
bindsym --release Print exec scrot -s ~/prints/print_%d_%m_%Y_%T.png
bindsym --release Shift+Print exec scrot ~/prints/print_%d_%m_%Y_%T.png
gaps inner 10
gaps outer 10

 bar {
         position top

         font pango:Meslo LG M dz for Powerline, FontAwesome 10

         status_command ~/.i3/bumblebee-status/bumblebee-status -m xrandr cmus cpu sensors memory battery brightness pasink date-time -p brightness.wheel-up='light -A 5' brightness.wheel-down='light -U 5' cmus.format='{artist} | {title}' date-time.format='%d/%m | %H:%M' memory.format='{used}' -t wal-powerline
 }


exec --no-startup-id compton -cfb
exec --no-startup-id nm-applet
